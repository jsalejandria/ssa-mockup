{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '../assets/badge.laravel-mix.svg';\nimport _imports_1 from '../assets/badge.how-to-read-code.svg';\nvar _hoisted_1 = {\n  \"class\": \"action\"\n};\nvar _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"action__description\\\"><h1>Last Call to Action</h1><div class=\\\"action__description--statement\\\"><p>Another section content goes here</p></div></div><div class=\\\"action__container\\\"><div class=\\\"action__card\\\"><div class=\\\"action__card--left\\\"><img src=\\\"\" + _imports_0 + \"\\\" alt=\\\"\\\"><button>AUTOMATION</button></div><div class=\\\"action__card--right\\\"><p class=\\\"action__card--right-intro\\\">ROLL OUT</p><h2>Automatic Prototyping</h2><p> Webpack is the most powerful and flexible asset compilation tool available today. With that power, however, comes a certain level of complexity. </p></div></div><div class=\\\"action__card-2\\\"><div class=\\\"action__card-2--left\\\"><img src=\\\"\" + _imports_1 + \"\\\" alt=\\\"\\\"><button>SIMPLICITY</button></div><div class=\\\"action__card--right\\\"><p class=\\\"action__card--right-intro\\\">SIP COFFEE</p><h2>Complexity <br>Simplified</h2><p> I know too many backend developers who are stifled by one glaring phobia: CSS. How do you construct a layout when nothing lines up? </p></div></div></div>\", 2);\nvar _hoisted_4 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_4);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_4"],"sources":["/home/justin/repos/ssa-mockup/src/components/Action.vue"],"sourcesContent":["<template>\n  <div class=\"action\">\n    <div class=\"action__description\">\n      <h1>Last Call to Action</h1>\n      <div class=\"action__description--statement\">\n        <p>Another section content goes here</p>\n      </div>\n    </div>\n    <div class=\"action__container\">\n      <div class=\"action__card\">\n        <div class=\"action__card--left\">\n          <img src=\"../assets/badge.laravel-mix.svg\" alt=\"\" />\n          <button>AUTOMATION</button>\n        </div>\n        <div class=\"action__card--right\">\n          <p class=\"action__card--right-intro\">ROLL OUT</p>\n          <h2>Automatic Prototyping</h2>\n          <p>\n            Webpack is the most powerful and flexible asset compilation tool\n            available today. With that power, however, comes a certain level of\n            complexity.\n          </p>\n        </div>\n      </div>\n      <div class=\"action__card-2\">\n        <div class=\"action__card-2--left\">\n          <img src=\"../assets/badge.how-to-read-code.svg\" alt=\"\" />\n          <button>SIMPLICITY</button>\n        </div>\n        <div class=\"action__card--right\">\n          <p class=\"action__card--right-intro\">SIP COFFEE</p>\n          <h2>Complexity <br />Simplified</h2>\n          <p>\n            I know too many backend developers who are stifled by one glaring\n            phobia: CSS. How do you construct a layout when nothing lines up?\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Action\",\n};\n</script>\n"],"mappings":";OAWeA,UAAqC;OAerCC,UAA0C;;EAzBlD,SAAM;AAAQ;;kBACjBC,UAKM,C;;uBANRC,mBAAA,CAsCM,OAtCNC,UAsCM,EAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}